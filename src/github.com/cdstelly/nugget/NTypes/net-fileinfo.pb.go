// Code generated by protoc-gen-go. DO NOT EDIT.
// source: net-fileinfo.proto

package NTypes

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Net_FileInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filenames            []string `protobuf:"bytes,2,rep,name=filenames,proto3" json:"filenames,omitempty"`
	Createtime           int64    `protobuf:"varint,3,opt,name=createtime,proto3" json:"createtime,omitempty"`
	Modifytime           int64    `protobuf:"varint,4,opt,name=modifytime,proto3" json:"modifytime,omitempty"`
	Accesstime           int64    `protobuf:"varint,5,opt,name=accesstime,proto3" json:"accesstime,omitempty"`
	Emodifytime          int64    `protobuf:"varint,6,opt,name=emodifytime,proto3" json:"emodifytime,omitempty"`
	Fflags               string   `protobuf:"bytes,7,opt,name=fflags,proto3" json:"fflags,omitempty"`
	Flags                string   `protobuf:"bytes,8,opt,name=flags,proto3" json:"flags,omitempty"`
	Filesize             uint64   `protobuf:"varint,9,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Reconstructeddata    [][]byte `protobuf:"bytes,10,rep,name=reconstructeddata,proto3" json:"reconstructeddata,omitempty"`
	Beenreconstructed    bool     `protobuf:"varint,11,opt,name=beenreconstructed,proto3" json:"beenreconstructed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Net_FileInfo) Reset()         { *m = Net_FileInfo{} }
func (m *Net_FileInfo) String() string { return proto.CompactTextString(m) }
func (*Net_FileInfo) ProtoMessage()    {}
func (*Net_FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aaccb949b068768, []int{0}
}

func (m *Net_FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Net_FileInfo.Unmarshal(m, b)
}
func (m *Net_FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Net_FileInfo.Marshal(b, m, deterministic)
}
func (m *Net_FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Net_FileInfo.Merge(m, src)
}
func (m *Net_FileInfo) XXX_Size() int {
	return xxx_messageInfo_Net_FileInfo.Size(m)
}
func (m *Net_FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Net_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Net_FileInfo proto.InternalMessageInfo

func (m *Net_FileInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Net_FileInfo) GetFilenames() []string {
	if m != nil {
		return m.Filenames
	}
	return nil
}

func (m *Net_FileInfo) GetCreatetime() int64 {
	if m != nil {
		return m.Createtime
	}
	return 0
}

func (m *Net_FileInfo) GetModifytime() int64 {
	if m != nil {
		return m.Modifytime
	}
	return 0
}

func (m *Net_FileInfo) GetAccesstime() int64 {
	if m != nil {
		return m.Accesstime
	}
	return 0
}

func (m *Net_FileInfo) GetEmodifytime() int64 {
	if m != nil {
		return m.Emodifytime
	}
	return 0
}

func (m *Net_FileInfo) GetFflags() string {
	if m != nil {
		return m.Fflags
	}
	return ""
}

func (m *Net_FileInfo) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *Net_FileInfo) GetFilesize() uint64 {
	if m != nil {
		return m.Filesize
	}
	return 0
}

func (m *Net_FileInfo) GetReconstructeddata() [][]byte {
	if m != nil {
		return m.Reconstructeddata
	}
	return nil
}

func (m *Net_FileInfo) GetBeenreconstructed() bool {
	if m != nil {
		return m.Beenreconstructed
	}
	return false
}

type Net_Query struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Net_Query) Reset()         { *m = Net_Query{} }
func (m *Net_Query) String() string { return proto.CompactTextString(m) }
func (*Net_Query) ProtoMessage()    {}
func (*Net_Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aaccb949b068768, []int{1}
}

func (m *Net_Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Net_Query.Unmarshal(m, b)
}
func (m *Net_Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Net_Query.Marshal(b, m, deterministic)
}
func (m *Net_Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Net_Query.Merge(m, src)
}
func (m *Net_Query) XXX_Size() int {
	return xxx_messageInfo_Net_Query.Size(m)
}
func (m *Net_Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Net_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Net_Query proto.InternalMessageInfo

func (m *Net_Query) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Net_FileInfo)(nil), "NTypes.net_FileInfo")
	proto.RegisterType((*Net_Query)(nil), "NTypes.net_Query")
}

func init() { proto.RegisterFile("net-fileinfo.proto", fileDescriptor_9aaccb949b068768) }

var fileDescriptor_9aaccb949b068768 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0xbb, 0xd5, 0xf5, 0x6d, 0x88, 0x0b, 0x43, 0xc2, 0x14, 0x09, 0x3b, 0xf5, 0xa0,
	0x3b, 0xe8, 0xd1, 0xbb, 0xe2, 0x45, 0xb0, 0xf3, 0x3e, 0xb2, 0xf4, 0x45, 0x02, 0x5b, 0x32, 0x92,
	0x4c, 0x98, 0x9f, 0xd7, 0x0f, 0x22, 0x49, 0x75, 0x6b, 0xdd, 0xf1, 0xfd, 0x7e, 0xff, 0x84, 0xc7,
	0xfb, 0x03, 0xd1, 0xe8, 0xef, 0xa4, 0x5a, 0xa3, 0xd2, 0xd2, 0xcc, 0xb7, 0xd6, 0x78, 0x43, 0xf2,
	0xd7, 0xf7, 0xfd, 0x16, 0xdd, 0xec, 0x3b, 0x85, 0x91, 0x46, 0xbf, 0x7c, 0x52, 0x6b, 0x7c, 0xd1,
	0xd2, 0x90, 0x73, 0x48, 0x55, 0x4d, 0x13, 0x96, 0x94, 0x45, 0x95, 0xaa, 0x9a, 0x5c, 0x43, 0x11,
	0x9e, 0x6a, 0xbe, 0x41, 0x47, 0x53, 0x96, 0x95, 0x45, 0x75, 0x04, 0xe4, 0x06, 0x40, 0x58, 0xe4,
	0x1e, 0xbd, 0xda, 0x20, 0xcd, 0x58, 0x52, 0x66, 0x55, 0x8b, 0x04, 0xbf, 0x31, 0xb5, 0x92, 0xfb,
	0xe8, 0x7b, 0x8d, 0x3f, 0x92, 0xe0, 0xb9, 0x10, 0xe8, 0x5c, 0xf4, 0xfd, 0xc6, 0x1f, 0x09, 0x61,
	0x30, 0xc4, 0xd6, 0x07, 0x79, 0x0c, 0xb4, 0x11, 0xb9, 0x84, 0x5c, 0xca, 0x35, 0xff, 0x70, 0xf4,
	0x2c, 0xee, 0xfc, 0x3b, 0x91, 0x09, 0xf4, 0x1b, 0x3c, 0x88, 0xb8, 0x19, 0xc8, 0x14, 0x06, 0x61,
	0x79, 0xa7, 0xbe, 0x90, 0x16, 0x2c, 0x29, 0x7b, 0xd5, 0x61, 0x26, 0xb7, 0x30, 0xb6, 0x28, 0x8c,
	0x76, 0xde, 0xee, 0x84, 0xc7, 0xba, 0xe6, 0x9e, 0x53, 0x60, 0x59, 0x39, 0xaa, 0x4e, 0x45, 0x48,
	0xaf, 0x10, 0x75, 0x47, 0xd0, 0x21, 0x4b, 0xca, 0x41, 0x75, 0x2a, 0x66, 0x57, 0x50, 0x84, 0x2b,
	0xbf, 0xed, 0xd0, 0xee, 0xff, 0x9f, 0xf8, 0x7e, 0x01, 0x93, 0x05, 0xda, 0x4f, 0x25, 0x70, 0xd9,
	0xa9, 0xe2, 0x11, 0x2e, 0x9e, 0xd1, 0x77, 0xd9, 0x78, 0xde, 0x14, 0x37, 0x3f, 0x7c, 0x37, 0x9d,
	0xb4, 0xd1, 0x5f, 0x70, 0x95, 0xc7, 0x9e, 0x1f, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x46, 0x69,
	0xcb, 0xd0, 0xfd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceNet_FileInfoClient is the client API for ServiceNet_FileInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceNet_FileInfoClient interface {
	GetNet_FileInfo(ctx context.Context, in *Net_Query, opts ...grpc.CallOption) (*Net_FileInfo, error)
}

type serviceNet_FileInfoClient struct {
	cc *grpc.ClientConn
}

func NewServiceNet_FileInfoClient(cc *grpc.ClientConn) ServiceNet_FileInfoClient {
	return &serviceNet_FileInfoClient{cc}
}

func (c *serviceNet_FileInfoClient) GetNet_FileInfo(ctx context.Context, in *Net_Query, opts ...grpc.CallOption) (*Net_FileInfo, error) {
	out := new(Net_FileInfo)
	err := c.cc.Invoke(ctx, "/NTypes.Service_net_FileInfo/Get_net_FileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceNet_FileInfoServer is the server API for ServiceNet_FileInfo service.
type ServiceNet_FileInfoServer interface {
	GetNet_FileInfo(context.Context, *Net_Query) (*Net_FileInfo, error)
}

func RegisterServiceNet_FileInfoServer(s *grpc.Server, srv ServiceNet_FileInfoServer) {
	s.RegisterService(&_ServiceNet_FileInfo_serviceDesc, srv)
}

func _ServiceNet_FileInfo_GetNet_FileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Net_Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceNet_FileInfoServer).GetNet_FileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NTypes.Service_net_FileInfo/GetNet_FileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceNet_FileInfoServer).GetNet_FileInfo(ctx, req.(*Net_Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceNet_FileInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NTypes.Service_net_FileInfo",
	HandlerType: (*ServiceNet_FileInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get_net_FileInfo",
			Handler:    _ServiceNet_FileInfo_GetNet_FileInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "net-fileinfo.proto",
}
